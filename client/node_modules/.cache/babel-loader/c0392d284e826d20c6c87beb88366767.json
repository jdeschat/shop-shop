{"ast":null,"code":"import { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"./actions\";\nimport { useReducer } from 'react';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n    // if it's none of these actions, do not update state at all and keep things the same!\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"sources":["/Users/joelledeschatelets/Desktop/projects/shop-shop/client/src/utils/reducers.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useReducer","reducer","state","action","type","products","categories","currentCategory","useProductReducer","initialState"],"mappings":"AAAA,SACIA,eADJ,EAEIC,iBAFJ,EAGIC,uBAHJ,QAIO,WAJP;AAKA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAKP,eAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFP,OAAP;AAIJ;;AACA,SAAKP,iBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHI,QAAAA,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;AAFT,OAAP;;AAIJ,SAAKP,uBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHK,QAAAA,eAAe,EAAEJ,MAAM,CAACI;AAFrB,OAAP;AAIJ;;AACA;AACI,aAAOL,KAAP;AApBR;AAsBH,CAvBM;AAyBP,OAAO,SAASM,iBAAT,CAA2BC,YAA3B,EAAyC;AAC5C,SAAOT,UAAU,CAACC,OAAD,EAAUQ,YAAV,CAAjB;AACH","sourcesContent":["import {\n    UPDATE_PRODUCTS,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY\n} from \"./actions\";\nimport { useReducer } from 'react';\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n        case UPDATE_PRODUCTS:\n            return {\n                ...state,\n                products: [...action.products]\n            };\n        // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories]\n            };\n        case UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.currentCategory\n            };\n        // if it's none of these actions, do not update state at all and keep things the same!\n        default:\n            return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n}"]},"metadata":{},"sourceType":"module"}